// Generated by Dagger (https://dagger.dev).
package com.nimeshpatel.readerapp.screens.home;

import com.google.firebase.auth.FirebaseAuth;
import com.nimeshpatel.readerapp.repository.FireRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<FireRepository> repositoryProvider;

  private final Provider<FirebaseAuth> authProvider;

  public HomeViewModel_Factory(Provider<FireRepository> repositoryProvider,
      Provider<FirebaseAuth> authProvider) {
    this.repositoryProvider = repositoryProvider;
    this.authProvider = authProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(repositoryProvider.get(), authProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<FireRepository> repositoryProvider,
      Provider<FirebaseAuth> authProvider) {
    return new HomeViewModel_Factory(repositoryProvider, authProvider);
  }

  public static HomeViewModel newInstance(FireRepository repository, FirebaseAuth auth) {
    return new HomeViewModel(repository, auth);
  }
}
