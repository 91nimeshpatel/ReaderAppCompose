// Generated by Dagger (https://dagger.dev).
package com.nimeshpatel.readerapp.screens.login;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<FirebaseAuth> authProvider;

  private final Provider<FirebaseFirestore> firebaseFireStoreProvider;

  public LoginViewModel_Factory(Provider<FirebaseAuth> authProvider,
      Provider<FirebaseFirestore> firebaseFireStoreProvider) {
    this.authProvider = authProvider;
    this.firebaseFireStoreProvider = firebaseFireStoreProvider;
  }

  @Override
  public LoginViewModel get() {
    return newInstance(authProvider.get(), firebaseFireStoreProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<FirebaseAuth> authProvider,
      Provider<FirebaseFirestore> firebaseFireStoreProvider) {
    return new LoginViewModel_Factory(authProvider, firebaseFireStoreProvider);
  }

  public static LoginViewModel newInstance(FirebaseAuth auth, FirebaseFirestore firebaseFireStore) {
    return new LoginViewModel(auth, firebaseFireStore);
  }
}
