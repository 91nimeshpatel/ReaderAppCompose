// Generated by Dagger (https://dagger.dev).
package com.nimeshpatel.readerapp.di;

import com.google.firebase.firestore.FirebaseFirestore;
import com.nimeshpatel.readerapp.repository.FireRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideFireBookRepositoryFactory implements Factory<FireRepository> {
  private final Provider<FirebaseFirestore> firebaseFireStoreProvider;

  public AppModule_ProvideFireBookRepositoryFactory(
      Provider<FirebaseFirestore> firebaseFireStoreProvider) {
    this.firebaseFireStoreProvider = firebaseFireStoreProvider;
  }

  @Override
  public FireRepository get() {
    return provideFireBookRepository(firebaseFireStoreProvider.get());
  }

  public static AppModule_ProvideFireBookRepositoryFactory create(
      Provider<FirebaseFirestore> firebaseFireStoreProvider) {
    return new AppModule_ProvideFireBookRepositoryFactory(firebaseFireStoreProvider);
  }

  public static FireRepository provideFireBookRepository(FirebaseFirestore firebaseFireStore) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideFireBookRepository(firebaseFireStore));
  }
}
